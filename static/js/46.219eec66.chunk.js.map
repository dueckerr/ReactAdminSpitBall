{"version":3,"sources":["views/Dashboard/Dashboard.js","../node_modules/lodash.isobject/index.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardBody.js"],"names":["EOSCollapse","lazy","Dashboard","props","loading","className","toggle","bind","onRadioBtnClick","state","dropdownOpen","radioSelected","onEntering","onEntered","onExiting","onExited","toggleAccordion","toggleCustom","toggleFade","collapse","accordion","custom","status","fadeIn","timeout","this","setState","tab","map","x","index","xs","sm","lg","style","height","id","block","color","onClick","aria-expanded","aria-controls","isOpen","data-parent","aria-labelledby","Component","module","exports","value","type","propTypes","tag","noGutters","bool","string","cssModule","object","form","Row","Tag","attributes","classes","createElement","defaultProps","stringOrNumberProp","oneOfType","number","columnProps","shape","size","order","offset","md","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","push","_colClass","length","inverse","body","outline","innerRef","func","Card","ref","CardHeader","CardBody"],"mappings":"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","file":"static/js/46.219eec66.chunk.js","sourcesContent":["import React, { Component, lazy } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Collapse,\n  Row,\n} from 'reactstrap';\nconst EndofShiftTabs = lazy(() => import('../Tabs/EndofShiftTabs'));\nconst EOSCollapse = lazy(() => import('../Collapse/EOSCollapse'));\n\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n    super(props);\n    this.onEntering = this.onEntering.bind(this);\n    this.onEntered = this.onEntered.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n    this.toggleCustom = this.toggleCustom.bind(this);\n    this.toggleFade = this.toggleFade.bind(this);\n    this.state = {\n      collapse: false,\n      accordion: [true, false, false],\n      custom: [true, false],\n      status: 'Closed',\n      fadeIn: true,\n      timeout: 300,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n  onEntering() {\n    this.setState({ status: 'Opening...' });\n  }\n\n  onEntered() {\n    this.setState({ status: 'Opened' });\n  }\n\n  onExiting() {\n    this.setState({ status: 'Closing...' });\n  }\n\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  toggleCustom(tab) {\n\n    const prevState = this.state.custom;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      custom: state,\n    });\n  }\n\n  toggleFade() {\n    this.setState({ fadeIn: !this.state.fadeIn });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n        \n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 1</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"6\">\n            <EOSCollapse></EOSCollapse>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 2</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"6\">\n            <EOSCollapse></EOSCollapse>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 3</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 160 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n                              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 6 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h6 className=\"m-0 p-0\">#1</h6>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <EOSCollapse></EOSCollapse>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 4</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n                              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <EOSCollapse></EOSCollapse>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 5</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <EOSCollapse></EOSCollapse>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;"],"sourceRoot":""}