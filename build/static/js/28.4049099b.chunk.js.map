{"version":3,"sources":["../node_modules/lodash.isobject/index.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/Collapse.js","views/Dashboard/Dashboard.js"],"names":["module","exports","value","type","propTypes","tag","noGutters","bool","className","string","cssModule","object","form","Row","props","Tag","attributes","classes","createElement","defaultProps","stringOrNumberProp","oneOfType","number","columnProps","shape","size","order","offset","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","push","_colClass","length","inverse","color","body","outline","innerRef","func","Card","ref","CardHeader","CardBody","active","block","disabled","onClick","children","node","close","Button","_React$Component","_this","call","this","bind","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","btnOutlineColor","href","defaultAriaLabel","undefined","Component","_transitionStatusToCl","isOpen","arrayOf","navbar","appear","enter","exit","timeout","Collapse","transitionStatusToClassHash","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","_Component","state","height","name","onEntering","isAppearing","setState","onEntered","onExit","onExiting","offsetHeight","onExited","_this2","otherProps","transitionProps","childProps","in","status","collapseClass","getTransitionClass","style","Dashboard","loading","toggle","onRadioBtnClick","dropdownOpen","radioSelected","toggleAccordion","toggleCustom","toggleFade","collapse","accordion","custom","fadeIn","tab","map","x","index","id","aria-expanded","aria-controls","data-parent","aria-labelledby"],"mappings":"kKAoCAA,EAAOC,QAPP,SAAkBC,GAGhB,IAAIC,SAAcD,EAClB,QAASA,IAAkB,UAARC,GAA4B,YAARA,K,iCCjCzC,kFAMIC,EAAY,CACdC,IAAK,IACLC,UAAW,IAAUC,KACrBC,UAAW,IAAUC,OACrBC,UAAW,IAAUC,OACrBC,KAAM,IAAUL,MAMdM,EAAM,SAAaC,GACrB,IAAIN,EAAYM,EAAMN,UAClBE,EAAYI,EAAMJ,UAClBJ,EAAYQ,EAAMR,UAClBS,EAAMD,EAAMT,IACZO,EAAOE,EAAMF,KACbI,EAAa,YAA8BF,EAAO,CAAC,YAAa,YAAa,YAAa,MAAO,SAEjGG,EAAU,YAAgB,IAAWT,EAAWF,EAAY,aAAe,KAAMM,EAAO,WAAa,OAAQF,GACjH,OAAO,IAAMQ,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACvDR,UAAWS,MAIfJ,EAAIT,UAAYA,EAChBS,EAAIM,aAnBe,CACjBd,IAAK,OAmBQ,O,iCCjCf,oGAQIe,EAAqB,IAAUC,UAAU,CAAC,IAAUC,OAAQ,IAAUb,SACtEc,EAAc,IAAUF,UAAU,CAAC,IAAUd,KAAM,IAAUe,OAAQ,IAAUb,OAAQ,IAAUe,MAAM,CACzGC,KAAM,IAAUJ,UAAU,CAAC,IAAUd,KAAM,IAAUe,OAAQ,IAAUb,SACvEiB,MAAON,EACPO,OAAQP,MAENhB,EAAY,CACdC,IAAK,IACLuB,GAAIL,EACJM,GAAIN,EACJO,GAAIP,EACJQ,GAAIR,EACJS,GAAIT,EACJf,UAAW,IAAUC,OACrBC,UAAW,IAAUC,OACrBsB,OAAQ,IAAUC,OAEhBf,EAAe,CACjBd,IAAK,MACL4B,OApBc,CAAC,KAAM,KAAM,KAAM,KAAM,OAuBrCE,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDC,EAAM,SAAazB,GACrB,IAAIN,EAAYM,EAAMN,UAClBE,EAAYI,EAAMJ,UAClBuB,EAASnB,EAAMmB,OACflB,EAAMD,EAAMT,IACZW,EAAa,YAA8BF,EAAO,CAAC,YAAa,YAAa,SAAU,QAEvF0B,EAAa,GACjBP,EAAOQ,SAAQ,SAAUJ,EAAUK,GACjC,IAAIC,EAAa7B,EAAMuB,GAGvB,UAFOrB,EAAWqB,GAEbM,GAA6B,KAAfA,EAAnB,CAIA,IAAIP,GAAQM,EAEZ,GAAI,IAASC,GAAa,CACxB,IAAIC,EAEAC,EAAkBT,EAAO,IAAM,IAAMC,EAAW,IAChDS,EAAWX,EAAmBC,EAAMC,EAAUM,EAAWlB,MAC7De,EAAWO,KAAK,YAAgB,MAAYH,EAAc,IAAgBE,GAAYH,EAAWlB,MAA4B,KAApBkB,EAAWlB,KAAamB,EAAY,QAAUC,EAAkBF,EAAWjB,OAASiB,EAAWjB,OAA8B,IAArBiB,EAAWjB,MAAakB,EAAY,SAAWC,EAAkBF,EAAWhB,QAAUgB,EAAWhB,QAAgC,IAAtBgB,EAAWhB,OAAciB,IAAelC,QAC/V,CACL,IAAIsC,EAAYb,EAAmBC,EAAMC,EAAUM,GAEnDH,EAAWO,KAAKC,QAIfR,EAAWS,QACdT,EAAWO,KAAK,OAGlB,IAAI9B,EAAU,YAAgB,IAAWT,EAAWgC,GAAa9B,GACjE,OAAO,IAAMQ,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACvDR,UAAWS,MAIfsB,EAAInC,UAAYA,EAChBmC,EAAIpB,aAAeA,EACJ,O,iCCnFf,kFAMIf,EAAY,CACdC,IAAK,IACL6C,QAAS,IAAU3C,KACnB4C,MAAO,IAAU1C,OACjB2C,KAAM,IAAU7C,KAChB8C,QAAS,IAAU9C,KACnBC,UAAW,IAAUC,OACrBC,UAAW,IAAUC,OACrB2C,SAAU,IAAUjC,UAAU,CAAC,IAAUV,OAAQ,IAAUF,OAAQ,IAAU8C,QAM3EC,EAAO,SAAc1C,GACvB,IAAIN,EAAYM,EAAMN,UAClBE,EAAYI,EAAMJ,UAClByC,EAAQrC,EAAMqC,MACdC,EAAOtC,EAAMsC,KACbF,EAAUpC,EAAMoC,QAChBG,EAAUvC,EAAMuC,QAChBtC,EAAMD,EAAMT,IACZiD,EAAWxC,EAAMwC,SACjBtC,EAAa,YAA8BF,EAAO,CAAC,YAAa,YAAa,QAAS,OAAQ,UAAW,UAAW,MAAO,aAE3HG,EAAU,YAAgB,IAAWT,EAAW,SAAQ0C,GAAU,eAAsBE,GAAO,cAAqBD,IAASE,EAAU,SAAW,MAAQ,IAAMF,GAAgBzC,GACpL,OAAO,IAAMQ,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACvDR,UAAWS,EACXwC,IAAKH,MAITE,EAAKpD,UAAYA,EACjBoD,EAAKrC,aAvBc,CACjBd,IAAK,OAuBQ,O,iCCxCf,kFAMID,EAAY,CACdC,IAAK,IACLG,UAAW,IAAUC,OACrBC,UAAW,IAAUC,QAMnB+C,EAAa,SAAoB5C,GACnC,IAAIN,EAAYM,EAAMN,UAClBE,EAAYI,EAAMJ,UAClBK,EAAMD,EAAMT,IACZW,EAAa,YAA8BF,EAAO,CAAC,YAAa,YAAa,QAE7EG,EAAU,YAAgB,IAAWT,EAAW,eAAgBE,GACpE,OAAO,IAAMQ,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACvDR,UAAWS,MAIfyC,EAAWtD,UAAYA,EACvBsD,EAAWvC,aAjBQ,CACjBd,IAAK,OAiBQ,O,iCC7Bf,kFAMID,EAAY,CACdC,IAAK,IACLG,UAAW,IAAUC,OACrBC,UAAW,IAAUC,OACrB2C,SAAU,IAAUjC,UAAU,CAAC,IAAUV,OAAQ,IAAUF,OAAQ,IAAU8C,QAM3EI,EAAW,SAAkB7C,GAC/B,IAAIN,EAAYM,EAAMN,UAClBE,EAAYI,EAAMJ,UAClB4C,EAAWxC,EAAMwC,SACjBvC,EAAMD,EAAMT,IACZW,EAAa,YAA8BF,EAAO,CAAC,YAAa,YAAa,WAAY,QAEzFG,EAAU,YAAgB,IAAWT,EAAW,aAAcE,GAClE,OAAO,IAAMQ,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACvDR,UAAWS,EACXwC,IAAKH,MAITK,EAASvD,UAAYA,EACrBuD,EAASxC,aAnBU,CACjBd,IAAK,OAmBQ,O,iCChCf,mGAQID,EAAY,CACdwD,OAAQ,IAAUrD,KAClB,aAAc,IAAUE,OACxBoD,MAAO,IAAUtD,KACjB4C,MAAO,IAAU1C,OACjBqD,SAAU,IAAUvD,KACpB8C,QAAS,IAAU9C,KACnBF,IAAK,IACLiD,SAAU,IAAUjC,UAAU,CAAC,IAAUV,OAAQ,IAAU4C,KAAM,IAAU9C,SAC3EsD,QAAS,IAAUR,KACnB9B,KAAM,IAAUhB,OAChBuD,SAAU,IAAUC,KACpBzD,UAAW,IAAUC,OACrBC,UAAW,IAAUC,OACrBuD,MAAO,IAAU3D,MAOf4D,EAEJ,SAAUC,GAGR,SAASD,EAAOrD,GACd,IAAIuD,EAIJ,OAFAA,EAAQD,EAAiBE,KAAKC,KAAMzD,IAAUyD,MACxCR,QAAUM,EAAMN,QAAQS,KAAK,YAAuBH,IACnDA,EAPT,YAAeF,EAAQC,GAUvB,IAAIK,EAASN,EAAOO,UAyDpB,OAvDAD,EAAOV,QAAU,SAAiBY,GAC5BJ,KAAKzD,MAAMgD,SACba,EAAEC,iBAIAL,KAAKzD,MAAMiD,SACbQ,KAAKzD,MAAMiD,QAAQY,IAIvBF,EAAOI,OAAS,WACd,IAAIC,EAAcP,KAAKzD,MACnB8C,EAASkB,EAAYlB,OACrBmB,EAAYD,EAAY,cACxBjB,EAAQiB,EAAYjB,MACpBrD,EAAYsE,EAAYtE,UACxB0D,EAAQY,EAAYZ,MACpBxD,EAAYoE,EAAYpE,UACxByC,EAAQ2B,EAAY3B,MACpBE,EAAUyB,EAAYzB,QACtB5B,EAAOqD,EAAYrD,KACnBV,EAAM+D,EAAYzE,IAClBiD,EAAWwB,EAAYxB,SACvBtC,EAAa,YAA8B8D,EAAa,CAAC,SAAU,aAAc,QAAS,YAAa,QAAS,YAAa,QAAS,UAAW,OAAQ,MAAO,aAEhKZ,GAAwC,qBAAxBlD,EAAWgD,WAC7BhD,EAAWgD,SAAW,IAAM9C,cAAc,OAAQ,CAChD,eAAe,GACd,SAGL,IAAI8D,EAAkB,OAAS3B,EAAU,WAAa,IAAM,IAAMF,EAC9DlC,EAAU,YAAgB,IAAWT,EAAW,CAClD0D,MAAOA,GACNA,GAAS,MAAOA,GAASc,IAAiBvD,GAAO,OAASA,IAAcoC,GAAQ,YAAqB,CACtGD,OAAQA,EACRE,SAAUS,KAAKzD,MAAMgD,WACnBpD,GAEAM,EAAWiE,MAAgB,WAARlE,IACrBA,EAAM,KAGR,IAAImE,EAAmBhB,EAAQ,QAAU,KACzC,OAAO,IAAMhD,cAAcH,EAAK,YAAS,CACvCZ,KAAc,WAARY,GAAoBC,EAAW+C,QAAU,cAAWoB,GACzDnE,EAAY,CACbR,UAAWS,EACXwC,IAAKH,EACLS,QAASQ,KAAKR,QACd,aAAcgB,GAAaG,MAIxBf,EApET,CAqEE,IAAMiB,WAERjB,EAAO/D,UAAYA,EACnB+D,EAAOhD,aA/EY,CACjBgC,MAAO,YACP9C,IAAK,UA8EQ,O,iCCxGf,IAMIgF,EANJ,iHAcIjF,EAAY,YAAc,GAAI,aAAWA,UAAW,CACtDkF,OAAQ,IAAU/E,KAClByD,SAAU,IAAU3C,UAAU,CAAC,IAAUkE,QAAQ,IAAUtB,MAAO,IAAUA,OAC5E5D,IAAK,IACLG,UAAW,IAAUyD,KACrBuB,OAAQ,IAAUjF,KAClBG,UAAW,IAAUC,OACrB2C,SAAU,IAAUjC,UAAU,CAAC,IAAUkC,KAAM,IAAU9C,OAAQ,IAAUE,WAGzEQ,EAAe,YAAc,GAAI,aAAWA,aAAc,CAC5DmE,QAAQ,EACRG,QAAQ,EACRC,OAAO,EACPC,MAAM,EACNtF,IAAK,MACLuF,QAAS,IAAmBC,WAG1BC,IAA+BT,EAAwB,IAA0B,IAAmBU,UAAY,aAAcV,EAAsB,IAAmBW,SAAW,gBAAiBX,EAAsB,IAAmBY,SAAW,aAAcZ,EAAsB,IAAmBa,QAAU,WAAYb,GAMxU,SAASc,EAAUlC,GACjB,OAAOA,EAAKmC,aAGd,IAAIP,EAEJ,SAAUQ,GAGR,SAASR,EAAS/E,GAChB,IAAIuD,EASJ,OAPAA,EAAQgC,EAAW/B,KAAKC,KAAMzD,IAAUyD,MAClC+B,MAAQ,CACZC,OAAQ,MAEV,CAAC,aAAc,YAAa,SAAU,YAAa,YAAY9D,SAAQ,SAAU+D,GAC/EnC,EAAMmC,GAAQnC,EAAMmC,GAAMhC,KAAK,YAAuBH,OAEjDA,EAZT,YAAewB,EAAUQ,GAezB,IAAI5B,EAASoB,EAASnB,UA6EtB,OA3EAD,EAAOgC,WAAa,SAAoBxC,EAAMyC,GAC5CnC,KAAKoC,SAAS,CACZJ,OAAQJ,EAAUlC,KAEpBM,KAAKzD,MAAM2F,WAAWxC,EAAMyC,IAG9BjC,EAAOmC,UAAY,SAAmB3C,EAAMyC,GAC1CnC,KAAKoC,SAAS,CACZJ,OAAQ,OAEVhC,KAAKzD,MAAM8F,UAAU3C,EAAMyC,IAG7BjC,EAAOoC,OAAS,SAAgB5C,GAC9BM,KAAKoC,SAAS,CACZJ,OAAQJ,EAAUlC,KAEpBM,KAAKzD,MAAM+F,OAAO5C,IAGpBQ,EAAOqC,UAAY,SAAmB7C,GAEtBA,EAAK8C,aAEnBxC,KAAKoC,SAAS,CACZJ,OAAQ,IAEVhC,KAAKzD,MAAMgG,UAAU7C,IAGvBQ,EAAOuC,SAAW,SAAkB/C,GAClCM,KAAKoC,SAAS,CACZJ,OAAQ,OAEVhC,KAAKzD,MAAMkG,SAAS/C,IAGtBQ,EAAOI,OAAS,WACd,IAAIoC,EAAS1C,KAETO,EAAcP,KAAKzD,MACnBC,EAAM+D,EAAYzE,IAClBiF,EAASR,EAAYQ,OACrB9E,EAAYsE,EAAYtE,UACxBgF,EAASV,EAAYU,OACrB9E,EAAYoE,EAAYpE,UACxBsD,EAAWc,EAAYd,SAEvBkD,GADWpC,EAAYxB,SACV,YAA8BwB,EAAa,CAAC,MAAO,SAAU,YAAa,SAAU,YAAa,WAAY,cAE1HyB,EAAShC,KAAK+B,MAAMC,OACpBY,EAAkB,YAAKD,EAAY,KACnCE,EAAa,YAAKF,EAAY,KAClC,OAAO,IAAMhG,cAAc,aAAY,YAAS,GAAIiG,EAAiB,CACnEE,GAAI/B,EACJmB,WAAYlC,KAAKkC,WACjBG,UAAWrC,KAAKqC,UAChBC,OAAQtC,KAAKsC,OACbC,UAAWvC,KAAKuC,UAChBE,SAAUzC,KAAKyC,YACb,SAAUM,GACZ,IAAIC,EA1FV,SAA4BD,GAC1B,OAAOxB,EAA4BwB,IAAW,WAyFtBE,CAAmBF,GACnCrG,EAAU,YAAgB,IAAWT,EAAW+G,EAAe/B,GAAU,mBAAoB9E,GAC7F+G,EAAmB,OAAXlB,EAAkB,KAAO,CACnCA,OAAQA,GAEV,OAAO,IAAMrF,cAAcH,EAAK,YAAS,GAAIqG,EAAY,CACvDK,MAAO,YAAc,GAAIL,EAAWK,MAAOA,GAC3CjH,UAAWS,EACXwC,IAAKwD,EAAOnG,MAAMwC,WAChBU,OAID6B,EA7FT,CA8FE,aAEFA,EAASzF,UAAYA,EACrByF,EAAS1E,aAAeA,EACT,O,iLCnITuG,E,YACJ,WAAY5G,GAAQ,IAAD,8BACjB,4CAAMA,KA+ER6G,QAAU,kBAAM,yBAAKnH,UAAU,oCAAf,eA7Ed,EAAKoH,OAAS,EAAKA,OAAOpD,KAAZ,gBACd,EAAKqD,gBAAkB,EAAKA,gBAAgBrD,KAArB,gBAEvB,EAAK8B,MAAQ,CACXwB,cAAc,EACdC,cAAe,IAEjB,4CAAMjH,KAsER6G,QAAU,kBAAM,yBAAKnH,UAAU,oCAAf,eArEd,EAAKiG,WAAa,EAAKA,WAAWjC,KAAhB,gBAClB,EAAKoC,UAAY,EAAKA,UAAUpC,KAAf,gBACjB,EAAKsC,UAAY,EAAKA,UAAUtC,KAAf,gBACjB,EAAKwC,SAAW,EAAKA,SAASxC,KAAd,gBAChB,EAAKoD,OAAS,EAAKA,OAAOpD,KAAZ,gBACd,EAAKwD,gBAAkB,EAAKA,gBAAgBxD,KAArB,gBACvB,EAAKyD,aAAe,EAAKA,aAAazD,KAAlB,gBACpB,EAAK0D,WAAa,EAAKA,WAAW1D,KAAhB,gBAClB,EAAK8B,MAAQ,CACX6B,UAAU,EACVC,UAAW,EAAC,GAAM,GAAO,GACzBC,OAAQ,EAAC,GAAM,GACff,OAAQ,SACRgB,QAAQ,EACR1C,QAAS,KAzBM,E,sEA8BjBrB,KAAKoC,SAAS,CACZmB,cAAevD,KAAK+B,MAAMwB,iB,sCAIdC,GACdxD,KAAKoC,SAAS,CACZoB,cAAeA,M,mCAIjBxD,KAAKoC,SAAS,CAAEW,OAAQ,iB,kCAIxB/C,KAAKoC,SAAS,CAAEW,OAAQ,a,kCAIxB/C,KAAKoC,SAAS,CAAEW,OAAQ,iB,iCAIxB/C,KAAKoC,SAAS,CAAEW,OAAQ,a,sCAGViB,GAEd,IACMjC,EADY/B,KAAK+B,MAAM8B,UACLI,KAAI,SAACC,EAAGC,GAAJ,OAAcH,IAAQG,IAASD,KAE3DlE,KAAKoC,SAAS,CACZyB,UAAW9B,M,mCAIFiC,GAEX,IACMjC,EADY/B,KAAK+B,MAAM+B,OACLG,KAAI,SAACC,EAAGC,GAAJ,OAAcH,IAAQG,IAASD,KAE3DlE,KAAKoC,SAAS,CACZ0B,OAAQ/B,M,mCAKV/B,KAAKoC,SAAS,CAAE2B,QAAS/D,KAAK+B,MAAMgC,W,+BAK5B,IAAD,OAEP,OACE,yBAAK9H,UAAU,mBAEb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKoB,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,CAAMvB,UAAU,sBACd,kBAAC,IAAD,CAAUA,UAAU,QAClB,yBAAKA,UAAU,cAAf,WACA,yDACA,gDACA,+DACA,mDACA,0DACA,mDACA,qDACA,0CACA,kDACA,6CACA,qDACA,8DAEF,yBAAKA,UAAU,qBAAqBiH,MAAO,CAAElB,OAAQ,YAKzD,kBAAC,IAAD,CAAK3E,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,gBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,sDAQZ,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,wBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,mBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,0KACA,uUAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,kBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,oPACA,sUAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,gBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,kOACA,0LASd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,CAAMvB,UAAU,sBACd,kBAAC,IAAD,CAAUA,UAAU,QAClB,yBAAKA,UAAU,cAAf,WACA,yDACA,gDACA,+DACA,mDACA,0DACA,mDACA,qDACA,0CACA,kDACA,6CACA,qDACA,8DAEF,yBAAKA,UAAU,qBAAqBiH,MAAO,CAAElB,OAAQ,YAKzD,kBAAC,IAAD,CAAK3E,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,gBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,sDAQZ,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,wBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,mBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,0KACA,uUAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,kBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,oPACA,sUAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,gBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,kOACA,0LASd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,CAAMvB,UAAU,sBACd,kBAAC,IAAD,CAAUA,UAAU,QAClB,yBAAKA,UAAU,cAAf,WACA,yDACA,gDACA,+DACA,mDACA,0DACA,mDACA,qDACA,0CACA,kDACA,6CACA,qDACA,8DAEF,yBAAKA,UAAU,qBAAqBiH,MAAO,CAAElB,OAAQ,YAKzD,kBAAC,IAAD,CAAK3E,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,gBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,sDAQZ,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,wBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,mBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,0KACA,uUAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,kBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,oPACA,sUAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,gBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,kOACA,0LASd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,CAAMvB,UAAU,sBACd,kBAAC,IAAD,CAAUA,UAAU,QAClB,yBAAKA,UAAU,cAAf,WACA,yDACA,gDACA,+DACA,mDACA,0DACA,mDACA,qDACA,0CACA,kDACA,6CACA,qDACA,8DAEF,yBAAKA,UAAU,qBAAqBiH,MAAO,CAAElB,OAAQ,YAKzD,kBAAC,IAAD,CAAK3E,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,gBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,sDAQZ,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,wBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,mBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,0KACA,uUAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,kBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,oPACA,sUAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,gBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,kOACA,0LASd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,CAAMvB,UAAU,sBACd,kBAAC,IAAD,CAAUA,UAAU,QAClB,yBAAKA,UAAU,cAAf,WACA,yDACA,gDACA,+DACA,mDACA,0DACA,mDACA,qDACA,0CACA,kDACA,6CACA,qDACA,8DAEF,yBAAKA,UAAU,qBAAqBiH,MAAO,CAAElB,OAAQ,YAKzD,kBAAC,IAAD,CAAK3E,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,gBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,kDAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,QAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,yDACA,0CACA,0CACA,+DACA,4CACA,8CACA,sDAQZ,kBAAC,IAAD,CAAK/G,GAAG,KAAKC,GAAG,IAAIE,GAAG,KACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,uBAAGvB,UAAU,wBADf,wBAEE,yBAAKA,UAAU,yBAGjB,kBAAC,IAAD,KACE,yBAAKmI,GAAG,aACN,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,mBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,cAAcI,kBAAgB,cACnG,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,0KACA,uUAIJ,kBAAC,IAAD,CAAMvI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,cACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,eACrJ,wBAAIrI,UAAU,WAAd,kBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,eACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,oPACA,sUAIJ,kBAAC,IAAD,CAAMnI,UAAU,QACd,kBAAC,IAAD,CAAYmI,GAAG,gBACb,kBAAC,IAAD,CAAQ9E,OAAK,EAACV,MAAM,OAAO3C,UAAU,oBAAoBuD,QAAS,kBAAM,EAAKiE,gBAAgB,IAAIY,gBAAerE,KAAK+B,MAAM8B,UAAU,GAAIS,gBAAc,iBACrJ,wBAAIrI,UAAU,WAAd,gBAGJ,kBAAC,IAAD,CAAU8E,OAAQf,KAAK+B,MAAM8B,UAAU,GAAIU,cAAY,aAAaH,GAAG,iBACrE,kBAAC,IAAD,KACA,mDACA,qDACA,2CACA,kOACA,+L,GAv0BEvD,aAq1BTsC","file":"static/js/28.4049099b.chunk.js","sourcesContent":["/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\n\nvar _transitionStatusToCl;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread({}, Transition.propTypes, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread({}, Transition.defaultProps, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread({}, childProps.style, style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Collapse,\n  Row,\n} from 'reactstrap';\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n    super(props);\n    this.onEntering = this.onEntering.bind(this);\n    this.onEntered = this.onEntered.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n    this.toggleCustom = this.toggleCustom.bind(this);\n    this.toggleFade = this.toggleFade.bind(this);\n    this.state = {\n      collapse: false,\n      accordion: [true, false, false],\n      custom: [true, false],\n      status: 'Closed',\n      fadeIn: true,\n      timeout: 300,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n  onEntering() {\n    this.setState({ status: 'Opening...' });\n  }\n\n  onEntered() {\n    this.setState({ status: 'Opened' });\n  }\n\n  onExiting() {\n    this.setState({ status: 'Closing...' });\n  }\n\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  toggleCustom(tab) {\n\n    const prevState = this.state.custom;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      custom: state,\n    });\n  }\n\n  toggleFade() {\n    this.setState({ fadeIn: !this.state.fadeIn });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n        \n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 1</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Current Shift</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 2</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Current Shift</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 3</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n                              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Current Shift</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 4</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n                              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Current Shift</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 5</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">#1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">#2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">#3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Current Shift</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}