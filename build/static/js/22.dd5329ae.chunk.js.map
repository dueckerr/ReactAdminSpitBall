{"version":3,"sources":["../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/Collapse.js","views/Dashboard/Dashboard.js"],"names":["propTypes","active","bool","string","block","color","disabled","outline","tag","innerRef","oneOfType","object","func","onClick","size","children","node","className","cssModule","close","Button","_React$Component","props","_this","call","this","bind","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","createElement","btnOutlineColor","classes","href","defaultAriaLabel","type","undefined","ref","Component","defaultProps","_transitionStatusToCl","isOpen","arrayOf","navbar","appear","enter","exit","timeout","Collapse","transitionStatusToClassHash","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","_Component","state","height","forEach","name","onEntering","isAppearing","setState","onEntered","onExit","onExiting","offsetHeight","onExited","_this2","otherProps","transitionProps","childProps","in","status","collapseClass","getTransitionClass","style","Dashboard","loading","toggle","onRadioBtnClick","dropdownOpen","radioSelected","toggleAccordion","toggleCustom","toggleFade","collapse","accordion","custom","fadeIn","tab","map","x","index","xs","sm","lg","id","aria-expanded","aria-controls","data-parent","aria-labelledby"],"mappings":"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","file":"static/js/22.dd5329ae.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\n\nvar _transitionStatusToCl;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread({}, Transition.propTypes, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread({}, Transition.defaultProps, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread({}, childProps.style, style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;","import React, { Component } from 'react';\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Collapse,\n  Row,\n} from 'reactstrap';\n\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n    super(props);\n    this.onEntering = this.onEntering.bind(this);\n    this.onEntered = this.onEntered.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n    this.toggleCustom = this.toggleCustom.bind(this);\n    this.toggleFade = this.toggleFade.bind(this);\n    this.state = {\n      collapse: false,\n      accordion: [true, false, false],\n      custom: [true, false],\n      status: 'Closed',\n      fadeIn: true,\n      timeout: 300,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n  onEntering() {\n    this.setState({ status: 'Opening...' });\n  }\n\n  onEntered() {\n    this.setState({ status: 'Opened' });\n  }\n\n  onExiting() {\n    this.setState({ status: 'Closing...' });\n  }\n\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  toggleCustom(tab) {\n\n    const prevState = this.state.custom;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      custom: state,\n    });\n  }\n\n  toggleFade() {\n    this.setState({ fadeIn: !this.state.fadeIn });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n\n  render() {\n\n    return (\n      <div className=\"animated fadeIn\">\n        \n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 1</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Day 9/5/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 2</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Day 9/5/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 3</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n                              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Day 9/5/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 4</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n                              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Day 9/5/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs=\"12\" sm=\"6\" lg=\"2\">\n            <Card className=\"text-white bg-info\">\n              <CardBody className=\"pb-0\">\n                <div className=\"text-value\">Fleet 5</div>\n                <div>Current Pad: Spud Muffin</div>\n                <div>Customer: Devon</div>\n                <div>Pad Progress: 40 of 150 Stages</div>\n                <div>NPT Last 24: XX:XX</div>\n                <div>Pump Hours Last 24: XX:XX</div>\n                <div>Stages Last 24: X </div>\n                <div> Number of Wells: X </div>\n                <div>Pumps: XX</div>\n                <div>Standby Pumps: XX</div>\n                <div>Blender: XXX</div>\n                <div>Standby Blender: XXX</div>\n                <div>Last Event: Well Closed ????</div>\n              </CardBody>\n              <div className=\"chart-wrapper mx-3\" style={{ height: '70px' }}>\n              </div>\n            </Card>\n          </Col>\n          {/*  */}\n          <Col xs=\"12\" sm=\"6\" lg=\"4\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Last 5 Zones\n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #1</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #2</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Collapsible Group Item #3</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Current Pad: Spud Muffin</div>\n                      <div>Well: ABC</div>\n                      <div>Stage: 12</div>\n                      <div>Pad Progress: 40 of 150 Stages</div>\n                      <div>Open: XX:xx</div>\n                      <div>Closed: XX:xx</div>\n                      <div>Stages Issues </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n          <Col xs=\"12\" sm=\"6\" lg=\"5\">\n            <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> End of Shift Reports \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Day 9/5/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore atio.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Night 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euismod tincidunt ut laoreet dolore magna aliquam erat volutpat. Ut wisi enim ad minim veniam, quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Day 9/4/19</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                      <div>Zones Completed: X</div>\n                      <div>Pumping Hours: XX:xx</div>\n                      <div>NPT: XX:xx</div>\n                      <div>Reason for NPT: Lorem ipsum dolor sit amet, consectetuer adipiscing elit, sed diam nonummy nibh euis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat.</div>\n                      <div>Equipment Issues: Lorem ipsum dolor sit amet,  quis nostrud exerci tation ullamcorper suscipit lobortis nisl ut aliquip ex ea commodo consequat. </div>\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}