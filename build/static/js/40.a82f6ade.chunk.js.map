{"version":3,"sources":["views/Equipment/EquipmentLocation/Equipment.js","../node_modules/lodash.isobject/index.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/Collapse.js"],"names":["Breadcrumbs","props","loading","className","toggle","bind","onRadioBtnClick","state","dropdownOpen","radioSelected","onEntering","onEntered","onExiting","onExited","toggleAccordion","toggleCustom","toggleFade","collapse","accordion","custom","status","fadeIn","timeout","this","setState","tab","map","x","index","xs","lg","id","block","color","onClick","aria-expanded","aria-controls","isOpen","data-parent","aria-labelledby","Component","module","exports","value","type","propTypes","tag","noGutters","bool","string","cssModule","object","form","Row","Tag","attributes","classes","createElement","defaultProps","stringOrNumberProp","oneOfType","number","columnProps","shape","size","order","offset","sm","md","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Col","colClasses","forEach","i","columnProp","_classNames","colSizeInterfix","colClass","push","_colClass","length","active","disabled","outline","innerRef","func","children","node","close","Button","_React$Component","_this","call","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","btnOutlineColor","href","defaultAriaLabel","undefined","ref","_transitionStatusToCl","arrayOf","navbar","appear","enter","exit","Collapse","transitionStatusToClassHash","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","_Component","height","name","isAppearing","onExit","offsetHeight","_this2","otherProps","transitionProps","childProps","in","collapseClass","getTransitionClass","style"],"mappings":"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","file":"static/js/40.a82f6ade.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button,   Collapse, Card, CardBody, CardHeader, Col, Row } from 'reactstrap';\nimport { Badge, Pagination, PaginationItem, PaginationLink, Table } from 'reactstrap';\n\nclass Breadcrumbs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.onRadioBtnClick = this.onRadioBtnClick.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      radioSelected: 2,\n    };\n    super(props);\n    this.onEntering = this.onEntering.bind(this);\n    this.onEntered = this.onEntered.bind(this);\n    this.onExiting = this.onExiting.bind(this);\n    this.onExited = this.onExited.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.toggleAccordion = this.toggleAccordion.bind(this);\n    this.toggleCustom = this.toggleCustom.bind(this);\n    this.toggleFade = this.toggleFade.bind(this);\n    this.state = {\n      collapse: false,\n      accordion: [true, false, false],\n      custom: [true, false],\n      status: 'Closed',\n      fadeIn: true,\n      timeout: 300,\n    };\n  }\n\n  toggle() {\n    this.setState({\n      dropdownOpen: !this.state.dropdownOpen,\n    });\n  }\n\n  onRadioBtnClick(radioSelected) {\n    this.setState({\n      radioSelected: radioSelected,\n    });\n  }\n  onEntering() {\n    this.setState({ status: 'Opening...' });\n  }\n\n  onEntered() {\n    this.setState({ status: 'Opened' });\n  }\n\n  onExiting() {\n    this.setState({ status: 'Closing...' });\n  }\n\n  onExited() {\n    this.setState({ status: 'Closed' });\n  }\n\n  toggleAccordion(tab) {\n\n    const prevState = this.state.accordion;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      accordion: state,\n    });\n  }\n\n  toggleCustom(tab) {\n\n    const prevState = this.state.custom;\n    const state = prevState.map((x, index) => tab === index ? !x : false);\n\n    this.setState({\n      custom: state,\n    });\n  }\n\n  toggleFade() {\n    this.setState({ fadeIn: !this.state.fadeIn });\n  }\n\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col xs=\"12\" lg=\"6\">\n          <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Fleet 1 Equipment \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                      <h5 className=\"m-0 p-0\">Frac Pumps ('19')</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Blenders</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Datavan</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Hydration</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Tractors</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" lg=\"6\">\n          <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Fleet 2 Equipment \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                      <h5 className=\"m-0 p-0\">Frac Pumps </h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Blenders</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Datavan</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Hydration</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Tractors</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n\n        <Row>\n\n          <Col xs=\"12\" lg=\"6\">\n          <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Fleet 3 Equipment \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                      <h5 className=\"m-0 p-0\">Frac Pumps</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Blenders</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Datavan</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Hydration</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Tractors</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n\n          <Col xs=\"12\" lg=\"6\">\n          <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Fleet 4 Equipment \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Frac Pumps</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Blenders</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Datavan</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Hydration</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Tractors</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n\n        </Row>\n\n        <Col xs=\"12\" lg=\"12\">\n          <Card>\n              <CardHeader>\n                <i className=\"fa fa-align-justify\"></i> Shop Equipment \n                <div className=\"card-header-actions\">\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div id=\"accordion\">\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingOne\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(0)} aria-expanded={this.state.accordion[0]} aria-controls=\"collapseOne\">\n                        <h5 className=\"m-0 p-0\">Frac Pumps</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[0]} data-parent=\"#accordion\" id=\"collapseOne\" aria-labelledby=\"headingOne\">\n                      <CardBody>\n                      123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123  123123123\n                    </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingTwo\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(1)} aria-expanded={this.state.accordion[1]} aria-controls=\"collapseTwo\">\n                        <h5 className=\"m-0 p-0\">Blenders</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[1]} data-parent=\"#accordion\" id=\"collapseTwo\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Datavan</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Hydration</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                  <Card className=\"mb-0\">\n                    <CardHeader id=\"headingThree\">\n                      <Button block color=\"link\" className=\"text-left m-0 p-0\" onClick={() => this.toggleAccordion(2)} aria-expanded={this.state.accordion[2]} aria-controls=\"collapseThree\">\n                        <h5 className=\"m-0 p-0\">Tractors</h5>\n                      </Button>\n                    </CardHeader>\n                    <Collapse isOpen={this.state.accordion[2]} data-parent=\"#accordion\" id=\"collapseThree\">\n                      <CardBody>\n                          23456\n                      </CardBody>\n                    </Collapse>\n                  </Card>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n\n      </div>\n\n    );\n  }\n}\n\nexport default Breadcrumbs;\n","/**\n * lodash 3.0.2 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(1);\n * // => false\n */\nfunction isObject(value) {\n  // Avoid a V8 JIT bug in Chrome 19-20.\n  // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\"]);\n\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport isobject from 'lodash.isobject';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isobject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\n\nvar _transitionStatusToCl;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread({}, Transition.propTypes, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread({}, Transition.defaultProps, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"]);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread({}, childProps.style, style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"sourceRoot":""}